
###################
##
## As *.properties
##
database.jpa.persistence-location=classpath:persistence.xml

spring.datasource.platform: postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/sta
spring.datasource.initialization-mode.always

spring.datasource.jpa.properties.hibernate.hbm2ddl.auto=none
spring.datasource.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.datasource.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.jpa.properties.hibernate.format_sql=true
spring.datasource.jpa.properties.hibernate.default_schema=public
spring.datasource.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect

# disable driver's feature detection
# see https://stackoverflow.com/questions/46493500/hibernate-with-c3p0-createclob-is-not-yet-implemented
spring.datasource.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false


# Hikari will use the above plus the following to setup connection pooling
spring.datasource.minimumIdle=5
spring.datasource.maximumPoolSize=20
spring.datasource.idleTimeout=30000
spring.datasource.pool-name=SpringBootJPAHikariCP
spring.datasource.maxLifetime=2000000
spring.datasource.connectionTimeout=30000

# Without below HikariCP uses deprecated com.zaxxer.hikari.hibernate.HikariConnectionProvider
# Surprisingly enough below ConnectionProvider is in hibernate-hikaricp dependency and not hibernate-core
# So you need to pull that dependency but, make sure to exclude it's transitive dependencies or you will end up 
# with different versions of hibernate-core 
spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider